# Default server block for redirecting HTTP to HTTPS 
server {
    listen 80;
    listen [::]:80;
    server_name yoursite.com;

    # Redirect all HTTP traffic to HTTPS
    return 301 https://$host$request_uri;
}

# Server block for HTTPS
server {
    listen 443 ssl http2 ;
    listen [::]:443 ssl http2;
    server_name yoursite.com;

    root /var/www/html;
    index index.html index.htm index.nginx-debian.html index.php;

    # Real IP from localhost
    set_real_ip_from 127.0.0.1;

    # HTTP/2 and HTTP/3 settings
    add_header Alt-Svc 'h3-23=":443"; ma=86400'; # Advertises HTTP/3 support

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/yoursite.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/yoursite.com/privkey.pem; # managed by Certbot
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305';
    #ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:EECDH+AESGCM:EDH+AESGCM'; # Commented out cipher configuration
    ssl_ecdh_curve X25519:P-256:P-384:P-521;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets on;

    # OCSP Stapling and resolver for dns for faster connection vertification
    #ssl_stapling on;
    #ssl_stapling_verify on;
    #resolver 8.8.8.8 8.8.4.4 172.64.36.1 valid=600s; # Commented out resolver
    #resolver_timeout 5s;
  
   
    location / {
        try_files $uri $uri/ /index.php?$query_string;
        # proxy_set_header User-Agent $random_user_agent; # Commented out for dynamic User-Agent
       # proxy_set_header User-Agent $random_user_agent;
    }

    # Serve favicon.ico
    location = /favicon.ico {
        return 204;
        access_log off;
        log_not_found off;
    }
  # Main location block
# Cloudflare IP ranges
set_real_ip_from 103.21.244.0/22;
set_real_ip_from 103.22.200.0/22;
set_real_ip_from 103.31.4.0/22;
set_real_ip_from 104.16.0.0/12;
set_real_ip_from 108.162.192.0/18;
set_real_ip_from 131.0.72.0/22;
set_real_ip_from 141.101.64.0/18;
set_real_ip_from 162.158.0.0/15;
set_real_ip_from 172.64.0.0/13;
set_real_ip_from 173.245.48.0/20;
set_real_ip_from 188.114.96.0/20;
set_real_ip_from 190.93.240.0/20;
set_real_ip_from 197.234.240.0/22;
set_real_ip_from 198.41.128.0/17;
set_real_ip_from 2400:cb00::/32;
set_real_ip_from 2606:4700::/32;
set_real_ip_from 2803:f800::/32;
set_real_ip_from 2405:b500::/32;
set_real_ip_from 2405:8100::/32;
set_real_ip_from 2a06:98c0::/29;
set_real_ip_from 2c0f:f248::/32;

real_ip_header CF-Connecting-IP;

    # WebSocket proxy for WordPress u can set any path u like make sure u change it in both locations this is set for 5digit ports if u use 4digit remove one of /d in path
    location /redirecting/wordpress {
        if ($http_upgrade != "websocket") {
            return 404;
        }
      location ~ /redirecting/wordpress/\d\d\d\d\d$ {
            if ($request_uri ~* "([^/]*$)") {
                set $port $1;
                   
            }

            
            proxy_redirect off;
            proxy_pass http://127.0.0.1:$port/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            # proxy_set_header User-Agent $random_user_agent; # Commented out
            proxy_set_header User-Agent $http_user_agent;
            proxy_set_header Accept-Language "en-US,en;q=0.9";
            proxy_set_header Referer "https://example.com";
            add_header X-Random-Header $request_id;
            add_header X-Fake-Header "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.83 Safari/537.36";
            proxy_set_header X-Real-IP $remote_addr;
            # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Commented out
            # proxy_set_header X-Forwarded-For "0.0.0.0"; # Commented out
            proxy_hide_header X-Powered-By;
            proxy_hide_header X-Generator;
            more_clear_headers 'Server';
            proxy_set_header Accept-Encoding "";
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
            keepalive_timeout 3600s;
            proxy_intercept_errors on;
            proxy_buffering off;
            proxy_cache_bypass $http_upgrade;

            error_page 400 404 =404 /404.html;
            # set $padding "000000000000000000000$request_id"; # Commented out padding method
            set $padding "$request_id$uri$request_time"; # Dynamic padding for each request
        }

      #  return 404;
    }

    # Serve default HTML file
    location = /index.html {
        try_files $uri $uri/ =404;
    }

    # JSON response endpoint
    location /json {
        default_type application/json;
        set $random_response_code 1;
        rewrite ^ /index.php last;
    }

    # Deny access to hidden files
    location ~ /\.ht {
        deny all;
    }

    # PHP file handling
    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php-fpm.sock;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }

    # Caching static content
    location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
        expires 30d;
        add_header Cache-Control "public, max-age=2592000, immutable";
    }

    # Error pages
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    # Gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "no-referrer";
    add_header Permissions-Policy "geolocation=(), midi=(), sync-xhr=(), microphone=(), camera=(), magnetometer=(), gyroscope=(), speaker=(), fullscreen=*, payment=()";
    add_header Expect-CT "max-age=86400, enforce";
    server_tokens off;
}
